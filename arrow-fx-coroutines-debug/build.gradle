plugins {
    id "org.jetbrains.kotlin.jvm"
    id "org.jlleitschuh.gradle.ktlint"
}

apply plugin: 'kotlinx-atomicfu'
apply plugin: "com.github.johnrengelman.shadow"

apply from: "$SUB_PROJECT"
apply from: "$DOC_CREATION"

configurations {
    shadowDeps // shaded dependencies, not included into the resulting .pom file
    compileOnly.extendsFrom(shadowDeps)
    runtimeOnly.extendsFrom(shadowDeps)

    /*
     * It is possible to extend a particular configuration with shadow,
     * but in that case it changes dependency type to "runtime" and resolves it
     * (so it cannot be further modified). Otherwise, shadow just ignores all dependencies.
     */
    shadow.extendsFrom(api) // shadow - resulting configuration with shaded jar file
}

dependencies {
    implementation project(":arrow-fx-coroutines")
    implementation project(":arrow-fx-suspend-connection")

    shadowDeps "net.bytebuddy:byte-buddy:1.10.9"
    shadowDeps "net.bytebuddy:byte-buddy-agent:1.10.9"
    api "net.java.dev.jna:jna:5.5.0"
    api "net.java.dev.jna:jna-platform:5.5.0"

    testImplementation "junit:junit:4.12"
    testCompile "org.junit.vintage:junit-vintage-engine:5.7.0"
//    testImplementation "io.kotest:kotest-runner-junit5-jvm:$KOTEST_VERSION" // for kotest framework
//    testImplementation "io.kotest:kotest-assertions-core-jvm:$KOTEST_VERSION" // for kotest core jvm assertions
//    testImplementation "io.kotest:kotest-property-jvm:$KOTEST_VERSION" // for kotest property test
}

jar {
    manifest {
        attributes "Premain-Class": "kotlinx.coroutines.debug.AgentPremain"
        attributes "Can-Redefine-Classes": "true"
    }
}

shadowJar {
    classifier null
    // Shadow only byte buddy, do not package kotlin stdlib
    configurations = [project.configurations.shadowDeps]
    relocate('net.bytebuddy', 'arrow.fx.coroutines.repackaged.net.bytebuddy')
}